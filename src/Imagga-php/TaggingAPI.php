<?php
/**
 *  Copyright 2011 Wordnik, Inc.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 * @package default
 */


/**
 * NOTE: This class is auto generated by the swagger code generator program. Do not edit the class manually.
 */

/**
 * source code generated by http://restunited.com using Swagger Codegen
 * for any feedback/issue, please send to feedback{at}restunited.com
 *
 * swagger-codegen: https://github.com/wordnik/swagger-codegen
 */
namespace Sexyoung\ImaggaLaravel;

class TaggingAPI {


	/**
	 *
	 * @param unknown $apiClient
	 */
	function __construct($apiClient) {
		$this->apiClient = $apiClient;
	}


	/**
	 * tagging
	 * Analyze an image and return keywords describing it
	 * Analyze an image and return keywords describing it
	 *
	 * @param string  $url:     url (optional)
	 * @param string  $content: Content id received by uploading an image to the content endpoint (optional)
	 * @return TaggingResponse
	 */
	public function tagging($url=null, $content=null) {

		//parse inputs
		$resourcePath = "/tagging";
		//comment: no longer support format
		//$resourcePath = str_replace("{format}", "json", $resourcePath);
		$method = "GET";
		$queryParams = array();
		$headerParams = array();
		$_header_accept = array('application/json');
		$headerParams['Accept'] = count($_header_accept) > 0 ? $_header_accept[0] : 'application/json';
		$_header_content_type = array('application/x-www-form-urlencoded');
		$headerParams['Content-Type'] = count($_header_content_type) > 0 ? $_header_content_type[0] : 'application/json';

		if ($url != null) {
			$queryParams['url'] = $this->apiClient->toQueryValue($url);
		}
		if ($content != null) {
			$queryParams['content'] = $this->apiClient->toQueryValue($content);
		}
		//make the API Call
		if (! isset($body)) {
			$body = null;
		}

		//form parameter
		$formParameters = array();
		if (count($formParameters) > 0) {
			$body = $formParameters;
		}

		// authentication setting
		$require_auth = TRUE;

		$response = $this->apiClient->callAPI($resourcePath, $method,
			$queryParams, $body,
			$headerParams, $require_auth);


		if (! $response) {
			return null;
		}

		$responseObject = $this->apiClient->deserialize($response,
			'TaggingResponse');
		return $responseObject;
	}


}
